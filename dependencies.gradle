ext {
    versions = [
            appCompat       : "1.1.0-alpha02",
            ktx             : "1.1.0-alpha04",
            navigation      : "1.0.0-beta02",
            legacy          : "1.0.0",
            constraintLayout: "1.1.3",
            recyclerView    : "1.0.0",
            moshi           : "1.8.0",
            okHttp          : "3.12.0",
            retrofit        : '2.5.0',
            dagger          : '2.20',
            rxKotlin        : '2.3.0',
            rxAndroid       : '2.1.0',
            sqlbrite        : '1.1.2',
            traceur         : '1.0.1',
            timber          : '4.7.1',
            glide           : '4.8.0',
            linkPreview     : '1.0.9',
            epoxy           : '3.3.0',
            firebase        : '16.0.1',
            crashlytics     : '2.9.9',

            espresso        : '3.1.2-alpha01',
            testRunner      : '1.1.2-alpha01',
            restMock        : '0.3.2',
            mockito         : '2.23.4',
            junit           : '4.12',
            leakcanary      : '1.6.2',
            multiDex        : '2.0.0',
            mockitoKotlin   : '1.6.0'
    ]

    mockito = [mockito: "org.mockito:mockito-core:$versions.mockito"]
    junit = [junit: "junit:junit:$versions.junit"]
    restMock = [restMock: "com.github.andrzejchm.RESTMock:android:$versions.restMock"]


    androidx = [
            appcompat           : "androidx.appcompat:appcompat:$versions.appCompat",
            ktx                 : "androidx.core:core-ktx:$versions.ktx",
            constraintLayout    : "androidx.constraintlayout:constraintlayout:$versions.constraintLayout",
            recyclerView        : "androidx.recyclerview:recyclerview:$versions.recyclerView",
            multiDex            : "androidx.multidex:multidex:$versions.multiDex",
            navCommonKtx        : "android.arch.navigation:navigation-common-ktx:$versions.navigation",
            navFragmentKtx      : "android.arch.navigation:navigation-fragment-ktx:$versions.navigation",
            navRuntimeKtx       : "android.arch.navigation:navigation-runtime-ktx:$versions.navigation",
            navUiKtx            : "android.arch.navigation:navigation-ui-ktx:$versions.navigation",
            legacy              : "androidx.legacy:legacy-support-v4:$versions.legacy"
    ]

    rxJava = [
            rxKotlin : "io.reactivex.rxjava2:rxkotlin:$versions.rxKotlin",
            rxAndroid: "io.reactivex.rxjava2:rxandroid:$versions.rxAndroid",
            traceur         : "com.tspoon.traceur:traceur:$versions.traceur"
    ]

    retrofit = [
            retrofit     : "com.squareup.retrofit2:retrofit:$versions.retrofit",
            rxAdapter    : "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit",
            moshiConverter: "com.squareup.retrofit2:converter-moshi:$versions.retrofit",
            sqlbrite     : "com.squareup.sqlbrite:sqlbrite:$versions.sqlbrite"
    ]

    moshi = [
            moshi: "com.squareup.moshi:moshi-kotlin:$versions.moshi"
    ]

    okHttp = [
            logger: "com.squareup.okhttp3:logging-interceptor:3.12.1",
            okhttp  : "com.squareup.okhttp3:okhttp:$versions.okHttp",
    ]

    onlyDebug = [
            chuck   : "com.readystatesoftware.chuck:library:1.1.0"
    ]

    onlyRelease = [
            chuckNoOp       : 'com.readystatesoftware.chuck:library-no-op:1.1.0',
    ]

    unitTest = [
            harcrestCore        : "org.hamcrest:hamcrest-core:$versions.hamcrest",
            harmcrestLib        : "org.hamcrest:hamcrest-library:$versions.hamcrest",
            hamcrestIntegration : "org.hamcrest:hamcrest-integration:1.4-atlassian-1",
            supportAnnotation   : "com.android.support:support-annotations:$versions.support",
            restMock            : "com.github.andrzejchm.RESTMock:android:$versions.restMock",
            kotlinTest          : "org.jetbrains.kotlin:kotlin-test:$kotlin_version",
            kotlinJunit         : "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version",
            mockitoKotlin       : "com.nhaarman:mockito-kotlin:$versions.mockitoKotlin"

    ] + junit + mockito + restMock

    androidTests = [
            mockitoAndroid      : "org.mockito:mockito-android:$versions.mockito",
            espressoCore        : "androidx.test.espresso:espresso-core:$versions.espresso",
            espressoContrib     : "androidx.test.espresso:espresso-contrib:$versions.espresso",
            espressoIntents     : "androidx.test.espresso:espresso-intents:$versions.espresso",
            espressoAcc         : "androidx.test.espresso:espresso-accessibility:$versions.espresso",
            espressoIdle        : "androidx.test.espresso:espresso-idling-resource:$versions.espresso",
            espressoConcurrent  : "androidx.test.espresso.idling:idling-concurrent:$versions.espresso",
            espressoNetIdle     : "androidx.test.espresso.idling:idling-net:$versions.espresso",
            testRunner          : "androidx.test:runner:$versions.testRunner",
            testRules           : "androidx.test:rules:$versions.testRunner"
    ] + mockito + restMock

    leakCannary = "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary"
    timber = "com.jakewharton.timber:timber:$versions.timber"

    dagger = [
            dagger              : "com.google.dagger:dagger:$versions.dagger",
            daggerAndroid       : "com.google.dagger:dagger-android:$versions.dagger",
            daggerAndroidSupport: "com.google.dagger:dagger-android-support:$versions.dagger"
    ]

    daggerCompiler = [
            daggerCompiler          : "com.google.dagger:dagger-compiler:$versions.dagger",
            daggerAndroidCompiler   : "com.google.dagger:dagger-android-processor:$versions.dagger"
    ]

    glide = "com.github.bumptech.glide:glide:$versions.glide"
    glideCompiler = "com.github.bumptech.glide:compiler:$versions.glide"
    glideOkhttp = "com.github.bumptech.glide:okhttp3-integration:$versions.glide"

    linkPreview = "io.github.ponnamkarthik:richlinkpreview:$versions.linkPreview"

    epoxy = [
            core                    : "com.airbnb.android:epoxy:$versions.epoxy",
            dataBinding             : "com.airbnb.android:epoxy-databinding:$versions.epoxy"
    ]
    epoxyCompiler = "com.airbnb.android:epoxy-processor:$versions.epoxy"

    firebase = "com.google.firebase:firebase-core:$versions.firebase"
    crashlytics = "com.crashlytics.sdk.android:crashlytics:$versions.crashlytics"

    supportLibs = androidx.values()
    networkLibs = retrofit.values() + okHttp.values() + moshi.values()
    rxJavaLibs = rxJava.values()
    otherLibs = [timber, glide, linkPreview, crashlytics] + epoxy.values() + dagger.values()

    debugLibs = onlyDebug.values() + leakCannary
    releaseLibs = onlyRelease.values() + leakCannary
    annotationProcessorLibs = [glideCompiler, epoxyCompiler] + daggerCompiler.values()

    unitTestLibs = unitTest.values() + leakCannary
    androidTestsLibs = androidTests.values() + supportLibs
}